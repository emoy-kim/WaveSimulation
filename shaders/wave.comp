#version 430

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

struct Attributes
{
   float x, y, z, nx, ny, nz, s, t;
};

layout(binding = 0, std430) buffer PrevPoints { Attributes Pn_prev[]; };
layout(binding = 1, std430) buffer CurrPoints { Attributes Pn[]; };
layout(binding = 2, std430) buffer NextPoints { Attributes Pn_next[]; };

uniform float WaveFactor;
uniform ivec2 WavePointNumSize;

void main() 
{
   int x = int(gl_GlobalInvocationID.x);
   int y = int(gl_GlobalInvocationID.y);
   if (x >= WavePointNumSize.x || y >= WavePointNumSize.y) return;

   int index = y * WavePointNumSize.x + x;
   float updated_height = 2.0f * Pn[index].y - Pn_prev[index].y;
   if (x > 0) updated_height += WaveFactor * Pn[index - 1].y;
   if (x < WavePointNumSize.x - 1) updated_height += WaveFactor * Pn[index + 1].y;
   if (y > 0) updated_height += WaveFactor * Pn[index - WavePointNumSize.x].y;
   if (y < WavePointNumSize.y - 1) updated_height += WaveFactor * Pn[index + WavePointNumSize.x].y;

   updated_height /= (1.0f + 4.0f * WaveFactor);
   Pn_next[index].x = Pn[index].x;
   Pn_next[index].y = updated_height;
   Pn_next[index].z = Pn[index].z;
   Pn_next[index].s = Pn[index].s;
   Pn_next[index].t = Pn[index].t;
}